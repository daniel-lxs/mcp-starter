name: Release Build

on:
  release:
    types: [created]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21]
        os: [linux, windows, darwin]
        arch: [amd64]
        exclude:
          - os: darwin
            arch: arm64
          - os: windows
            arch: arm64
    env:
      CGO_ENABLED: 0

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Build
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
      run: |
        go build ${{ matrix.os == 'windows' && '-ldflags -H=windowsgui' || '' }} -o mcp-starter-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }} ./src/

    - name: Package Windows Executable
      if: matrix.os == 'windows'
      run: |
        zip mcp-starter-${{ matrix.os }}-${{ matrix.arch }}.zip mcp-starter-${{ matrix.os }}-${{ matrix.arch }}.exe

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: binaries-${{ matrix.os }}-${{ matrix.arch }}
        path: mcp-starter-${{ matrix.os }}-${{ matrix.arch }}*
        retention-days: 1

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: binaries-*
        path: artifacts
        merge-multiple: true

    - name: Generate Checksums
      run: |
        cd artifacts
        sha256sum * > checksums.txt

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ github.workspace }}/artifacts/checksums.txt
        asset_name: checksums.txt
        asset_content_type: text/plain

    - name: Setup GitHub CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y gh

    - name: Upload All Binaries
      run: |
        cd artifacts
        for file in mcp-starter-*; do
          gh release upload ${{ github.event.release.tag_name }} "$file" \
            --repo $GITHUB_REPOSITORY \
            --clobber
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 